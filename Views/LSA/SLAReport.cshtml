
@model List<TAS360.Models.ViewModel.TicketViewModel>
@{
    ViewBag.Title = "Service Level Agreement";
    int total = ViewBag.tksclose + @ViewBag.tksopen;
    Layout = "~/Views/Shared/_LayoutReport.cshtml";

}
<div class="jumbotron">
    <div class="col-xs-3">
        <div class="thumbnail">
            <img src="https://pts-tools.com.mx/Content/img/proftech-logo-01.png" />
        </div>
    </div>
    <h1>Acuerdo de Nivel de Servicio (SLA) </h1>
</div>
@*Graficas *@
<div class="row">
    @*<div class="col-lg-6">
        <div class="panel panel-default">
            <div class="panel-heading"><b>Reporte total de Tickets por categoria</b> </div>
            <div class="panel-body">
                <canvas id="myPieChart" width="100" height="50"></canvas>
            </div>
        </div>
    </div>*@
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading"><b>Reporte Total de Tickets</b> </div>
            <div class="panel-body">
                <table id="summaryTable" class="table table-success table-striped">
                    <thead>
                        <tr>
                            <th scope="col">Tickets</th>
                            <th scope="col">#</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th scope="row">Abiertos</th>
                            <td>@ViewBag.tksopen</td>
                        </tr>
                        <tr>
                            <th scope="row">Cerrados</th>
                            <td>@ViewBag.tksclose</td>
                        </tr>
                        <tr>
                            <th scope="row">Total</th>
                            <td>@total</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    @*<div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading"><b>Reporte Status de Tickets: ultimo mes</b> </div>
            <div class="panel-body">
                <canvas id="myBarChart" width="100" height="50"></canvas>
            </div>
        </div>
    </div>*@

</div>
@*<div class="row">
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading"><b>Reporte total de Tickets por TAD: ultimo mes</b> </div>
            <div class="panel-body">
                <canvas id="myPieChart2" width="50" height="25"></canvas>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        <div class="panel panel-default">
            <div class="panel-heading"><b>Reporte total de Tickets por TAD</b> </div>
            <div class="panel-body">
                <canvas id="myBarChart2" width="50" height="50"></canvas>
            </div>
        </div>
    </div>

</div>*@
@*tabla de tickets *@
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <b>Tickets abiertos y su fecha compromiso</b>
            </div>
            <div class="panel-body">
                <table id="ticketsTable" class="table table-success table-striped">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th colspan="2">Titulo</th>
                            <th scope="col">TAD</th>
                            <th scope="col">Status</th>
                            <th scope="col">Categoria</th>
                            <th scope="col">Compromiso</th>
                            <th scope="col">Tiempo</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var ticket in Model)

                            {
                                int dias = (ticket.Datetobedone.Value - DateTime.Now).Days;
                                <tr>
                                    <td colspan="1"> <a href="@Url.Content("~/Tickets/ShowTicket/"  + ticket.id)">@ticket.id</a> </td>
                                    <td colspan="2"> @ticket.titulo</td>
                                    <td colspan="1"> @ticket.terminal_name</td>
                                    <td colspan="1"> @ticket.status_name</td>
                                    <td colspan="1"> @ticket.categoria_name</td>
                                    <td colspan="1"> @ticket.Datetobedone.Value.ToString("dd-MMM-yy")</td>
                                    <td colspan="1">
                                        @{

                                            if (DateTime.Now.ToShortDateString() == ticket.Datetobedone.Value.ToShortDateString())
                                            {
                                                <a style="color:darkblue"> Hoy es la entrega </a>

                                            }
                                            else if (DateTime.Now < ticket.Datetobedone)
                                            {
                                                <a style="color:blue"> Quedan @dias días</a>

                                            }
                                            else
                                            {
                                                dias = Math.Abs(dias);
                                                <a style="color:red"> Atrasado @dias días </a>
                                            }
                                        }

                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@*Documentacion SLA*@
<div class="row">
    <div class="col-md-6">
        <p class="lead">
            Los SLA se utilizan para establecer indicadores medibles del servicio que brindamos y así asegurar el cumplimiento de las expectativas de nuestros clientes.
        </p>
        <p class="lead">
            Para expresar un compromiso de calidad de servicio, esta debe ser medible con facilidad. Esta medición puede ser, muchas veces, subjetiva por parte de los clientes finales, como en el caso de un departamento de atención al cliente.
        </p>
        <p class="lead">
            Anteriormente se muestra las tablas y graficas midiendo la eficiencia de respuesta del servicio.
        </p>
    </div>
    <div class="col-md-6" style="margin:0px 0px 0px 0px">
        <img src="~/Content/img/SLA.jpg" class="img-responsive" alt="Responsive image">
    </div>
</div>
@section scripts
{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        function filterTable() {
            var input, filter, table, tr, td, i, j, txtValue, found;
            input = document.getElementById("searchInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("ticketsTable");  // Cambiar aquí para seleccionar la tabla correcta
            tr = table.getElementsByTagName("tr");

            // Iterar sobre todas las filas de la tabla, comenzando desde el índice 1 para omitir los encabezados
            for (i = 1; i < tr.length; i++) {
                found = false; // Reiniciamos el indicador de coincidencia para cada fila
                // Obtener todas las celdas de la fila
                td = tr[i].getElementsByTagName("td");
                // Iterar sobre todas las celdas de la fila
                for (j = 0; j < td.length; j++) {
                    // Obtener el contenido de la celda y convertirlo a mayúsculas para la comparación
                    txtValue = td[j].textContent || td[j].innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        // Si el texto coincide con el filtro, marcar como encontrado y salir del bucle interno
                        found = true;
                        break;
                    }
                }
                // Mostrar u ocultar la fila de datos dependiendo de si se encontró una coincidencia
                tr[i].style.display = found ? "" : "none";
            }
        }
    </script>
    <script>
        //Bar Chart ticketes por status
        jQuery.ajax({
                url: '@Url.Action("GetTicktsByStatus", "LSA")',
                type: "GET",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    /*console.log(data);*/

                    var arraystatus = [];
                    var arrayCantidad = [];

                    for (var i = 0; i < data.length; i++) {

                        /*console.log(data[i].mes)*/
                        arraystatus.push(data[i].Estado)
                        arrayCantidad.push(data[i].Cantidad)
                    }

                    console.log(arraystatus)
                    console.log(arrayCantidad)

                    var controlBar1 = document.getElementById("myBarChart");

                    var graficoBar1 = new Chart(controlBar1, {
                        type: 'bar',
                        data: {
                            labels: arraystatus,
                            datasets: [{
                                label: "Status",
                                /*backgroundColor: "#0800B1",*/
                                backgroundColor: ["#BB2100", "#03B100", "#0083B1", "#0800B1", "#EBFA00", "#FA00D8"],
                                borderColor: "#000000",
                                borderWidth: 0,
                                data: arrayCantidad,
                            }],
                        },
                        options: {
                            scales: {
                                xAxes: [{
                                    gridLines: {
                                        display: true
                                    },
                                }],
                                yAxes: [{
                                    ticks: {
                                        min: 0,
                                    },
                                    gridLines: {
                                        display: true
                                    }
                                }],
                            },
                            legend: {
                                display: true
                            }
                        }
                    });


                },
                error: function (error) {
                    console.log(error)
                }
        });

        //Bar Chart total de tickets por tad
        jQuery.ajax({
                url: '@Url.Action("GetTicketsByTerminal", "LSA")',
                type: "GET",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    /*console.log(data);*/

                    var arraystatus = [];
                    var arrayCantidad = [];

                    for (var i = 0; i < data.length; i++) {

                        /*console.log(data[i].mes)*/
                        arraystatus.push(data[i].Terminal)
                        arrayCantidad.push(data[i].Cantidad)
                    }

                    console.log(arraystatus)
                    console.log(arrayCantidad)

                    var controlBar1 = document.getElementById("myBarChart2");

                    var graficoBar1 = new Chart(controlBar1, {
                        type: 'bar',
                        data: {
                            labels: arraystatus,
                            datasets: [{
                                label: "Status",
                                /*backgroundColor: "#0800B1",*/
                                backgroundColor: ["#BB2100", "#03B100", "#0083B1", "#0800B1", "#EBFA00", "#FA00D8", '#007bff', '#dc3545', '#ffc107', '#28a745'],
                                borderColor: "#000000",
                                borderWidth: 0,
                                data: arrayCantidad,
                            }],
                        },
                        options: {
                            scales: {
                                xAxes: [{
                                    gridLines: {
                                        display: true
                                    },
                                }],
                                yAxes: [{
                                    ticks: {
                                        min: 0,
                                    },
                                    gridLines: {
                                        display: true
                                    }
                                }],
                            },
                            legend: {
                                display: true
                            }
                        }
                    });


                },
                error: function (error) {
                    console.log(error)
                }
        });

        //Pie Chart Total de tickets abiertos por Categoria
        jQuery.ajax({
            url: '@Url.Action("GetTicketsByCategoria", "LSA")',
            type: "GET",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var arrayCategorias = [];
                var arrayCantidad = [];

                for (var x = 0; x < data.length; x++)
                {
                    arrayCategorias.push(data[x].Categoria)
                    arrayCantidad.push(data[x].Cantidad)
                }

                console.log(arrayCategorias)
                console.log(arrayCantidad)

                var controlPie1 = document.getElementById("myPieChart");
                var graficoPie1 = new Chart(controlPie1, {
                    type: 'pie',
                    data: {
                        labels: arrayCategorias,
                        datasets: [{
                            data: arrayCantidad,
                            backgroundColor: ['#007bff', '#dc3545', '#ffc107', '#28a745', "#BB2100", "#03B100", "#0083B1", "#0800B1", "#EBFA00", "#FA00D8"],
                        }],
                    },
                });

            },
            error: function (error) {
                console.log(error)
            }
        });

        //Pie Chart tickets abiertos por TAD del ultimo mes
        jQuery.ajax({
            url: '@Url.Action("GetTicketsByTerminalOnLastMonth", "LSA")',
            type: "GET",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var arrayCategorias = [];
                var arrayCantidad = [];

                for (var x = 0; x < data.length; x++)
                {
                    arrayCategorias.push(data[x].Terminal)
                    arrayCantidad.push(data[x].Cantidad)
                }

                console.log(arrayCategorias)
                console.log(arrayCantidad)

                var controlPie1 = document.getElementById("myPieChart2");
                var graficoPie1 = new Chart(controlPie1, {
                    type: 'pie',
                    data: {
                        labels: arrayCategorias,
                        datasets: [{
                            data: arrayCantidad,
                            backgroundColor: ['#007bff', '#dc3545', '#ffc107', '#28a745', "#BB2100", "#03B100", "#0083B1", "#0800B1", "#EBFA00", "#FA00D8"],
                        }],
                    },
                });

            },
            error: function (error) {
                console.log(error)
            }
        });
    </script>
}

